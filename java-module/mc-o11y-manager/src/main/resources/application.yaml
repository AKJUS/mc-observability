server:
  port: ${SERVER_PORT:18080}
  error:
    include-stacktrace: never

deploy:
  site-code: ${SITE_CODE:m-cmp}

spring:
  application:
    name: ${SPRING_APP_NAME:mc-o11y-manager}
  datasource:
    url: jdbc:mariadb://${DATABASE_HOST:mc-observability-maria}:${DATABASE_PORT:3306}/${DATABASE_NAME:mc_observability}
    username: ${DATABASE_ID:mc-agent}
    password: ${DATABASE_PW:mc-agent}
    hikari:
      max-lifetime: 150000
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        format_sql: false
        use_sql_comments: false
    open-in-view: false
    show-sql: false
  banner:
    location: classpath:banner.txt
  rabbitmq:
    host: mc-observability-rabbitmq
    port: 5672
    username: mc-agent
    password: mc-agent
    virtual-host: /test
    alert:
      queueName: alert.queue
      exchangeName: alert.exchange
      routingKey: alert
      deadLetterQueueName: alert.dlq
      deadLetterExchangeName: alert.dlx
      deadLetterRoutingKey: alert.dlq
      mqttExchangeName: mqtt.topic

springdoc:
  packages-to-scan: com.mcmp.o11ymanager
  paths-to-match: "/**"
  paths-to-exclude:
    - "/api/**/test/**"
  api-docs:
    enabled: true
  swagger-ui:
    path: /api/docs
  default-produces-media-type: application/json

loki:
  url: ${LOKI_URL:http://mc-observability-loki:3100}
  endpoints:
    query: /loki/api/v1/query
    range: /loki/api/v1/query_range

influxdb:
  servers:
    - url: ${INFLUX1_URL:http://mc-observability-influx:8086}
      database: ${INFLUX1_DATABASE:mc-observability}
      retention-policy: ${INFLUX1_RETENTION_POLICY:autogen}
      username: ${INFLUX1_USERNAME:mc-agent}
      password: ${INFLUX1_PASSWORD:mc-agent}
      uid: ${INFLUX1_UID:P951FEA4DE68E13C5}
    - url: ${INFLUX2_URL:http://mc-observability-influx-2:8087}
      database: ${INFLUX2_DATABASE:mc-observability-2}
      retention-policy: ${INFLUX2_RETENTION_POLICY:autogen}
      username: ${INFLUX2_USERNAME:mc-agent}
      password: ${INFLUX2_PASSWORD:mc-agent}
      uid: ${INFLUX2_UID:P951FEA4DE68E13C52}

health:
  check-interval: ${HEALTH_INTERVAL:10000}
  host-connection-check-timeout: ${HEALTH_TIMEOUT:5000}

ssh:
  connection-timeout: 10000
  ssh-connection-cache-timeout: 120000

feign:
  okhttp:
    enabled: true
  client:
    config:
      default:
        connect-timeout: ${FEIGN_CONNECT_TIMEOUT:5000}
        read-timeout: ${FEIGN_READ_TIMEOUT:30000}
        loggerLevel: full
      LokiFeignClient:
        loggerLevel: full
  semaphore:
    url: ${SEMAPHORE_URL:http://mc-observability-infra:3000}
    username: ${SEMAPHORE_USER:admin}
    password: ${SEMAPHORE_PASS:semaphorepass}
    project-name: ${SEMAPHORE_PROJECT:ansible}
    init-max-parallel-tasks: ${SEMAPHORE_MAX_TASKS:10}
    template-names:
      agent-install: ${SEMAPHORE_TEMPLATE_INSTALL:install-agent}
      agent-config-update: ${SEMAPHORE_TEMPLATE_CONFIG:config-update}
    task-check-scheduler:
      check-interval-sec: ${SEMAPHORE_CHECK_INTERVAL:5}
      max-wait-minutes: ${SEMAPHORE_MAX_WAIT:10}
  cb-tumblebug:
    connect-timeout: 5000
    read-timeout: 600000
    url: ${TUMBLEBUG_URL:http://mc-infra-manager:1323}
    id: ${TUMBLEBUG_ID:default}
    pw: ${TUMBLEBUG_PW:default}
  cb-spider:
    url: ${SPIDER_URL:http://mc-infra-connector:1024}
    id: ${SPIDER_ID:-}
    pw: ${SPIDER_PW:-}
  insight:
    url: ${INSIGHT_URL:http://mc-observability-insight:9001}

grafana:
  alert:
    protocol: ${GRAFANA_SERVER_PROTOCOL:http}
    ip: ${GRAFANA_SERVER_IP:mc-observability-grafana}
    port: ${GRAFANA_SERVER_PORT:3000}
    apiKey: ${GRAFANA_API_KEY:glsa_XXXX}
    orgId: ${GRAFANA_ORG_ID:1}
    folder:
      name: ${GRAFANA_FOLDER_NAME:o11yFolder}
      uid: ${GRAFANA_FOLDER_UID:xxxxxxxx}
    ruleGroup:
      metric: ${GRAFANA_RULE_GROUP:metric}
    receiver: ${GRAFANA_RECEIVER:o11y}
    noDataState: ${GRAFANA_NO_DATA_STATE:NoData}
    execErrState: ${GRAFANA_EXEC_ERR_STATE:Error}

logging:
  file:
    path: ${FILE_PATH:/applog}
    name: ${FILE_NAME:${spring.application.name}}
  logback:
    rollingpolicy:
      max-file-size: ${MAX_FILE_SIZE:200MB}
      max-history: ${MAX_HISTORY:14}
  level:
    org.apache.sshd.client: ERROR
    org.apache.sshd.common: ERROR
    feign: DEBUG
    feign.Logger: DEBUG
    feign.template: WARN
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type: TRACE
    org.hibernate.engine.transaction.internal.TransactionImpl: TRACE
    org.hibernate.type.descriptor.sql: TRACE

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: ${TRACE_PROB:1.0}

notification:
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME:XXXX@gmail.com}
    password: ${SMTP_PASSWORD:xxxx xxxx xxxx xxxx}
    smtpAuth: ${SMTP_AUTH:true}
    tlsRequired: ${SMTP_TLS_REQUIRED:true}
    tlsEnable: ${SMTP_TLS_ENABLE:true}
  sms:
    from: ${SMS_FROM:01012345678}
    serviceId: ${SMS_SERVICE_ID:ncp:sms:kr:12345678:xxxx}
    accessKey: ${SMS_ACCESS_KEY:ncp_iam_XXXX}
    secretKey: ${SMS_SECRET_KEY:ncp_iam_XXXXYYYY}
    provider: ${SMS_PROVIDER:naver-cloud}
    baseUrl: ${SMS_BASEURL:https://sens.apigw.ntruss.com}
  kakao:
    channelId: ${KAKAO_CHANNEL_ID:@xxxx}
    templateCode: ${KAKAO_TEMPLATE_CODE:triggerTemplate}
    serviceId: ${KAKAO_SERVICE_ID:ncp:kkobizmsg:kr:12345678:m-cmp}
    accessKey: ${KAKAO_ACCESS_KEY:ncp_iam_YYYY}
    secretKey: ${KAKAO_SECRET_KEY:ncp_iam_YYYYZZZZ}
    provider: ${SMS_PROVIDER:naver-cloud}
    baseUrl: ${SMS_BASEURL:https://sens.apigw.ntruss.com}
  slack:
    token: ${SLACK_OAUTH_TOKEN:xoxb-xxxx}
    baseUrl: ${SLACK_BASEURL:https://slack.com}
    apiPath: ${SLACK_API_PATH:/api/chat.postMessage}


