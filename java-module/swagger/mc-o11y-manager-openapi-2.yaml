swagger: "2.0"
info:
  description: "Multi-Cloud Observability Manager API for managing alert policies,\
    \ notification channels, and alert history"
  version: 0.4.1
  title: mc-o11y-manager API Documentation
host: localhost:18080
tags: []
schemes:
- http
paths:
  /api/o11y/log/labels:
    get:
      tags:
      - "[Manager] Monitoring Log"
      summary: LogLabelsQuery
      description: Retrieve the list of label keys provided by Loki.
      operationId: get-labels
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "timestamp" : "2025-10-01T00:54:27",
                "status" : "SUCCESS",
                "code" : "OK",
                "message" : "Successfully retrieved label list.",
                "requestId" : "string",
                "data" : {
                  "result" : {
                    "labels" : [ "string", "string" ]
                  }
                }
              }
          schema:
            $ref: '#/definitions/api_o11y_log_labels-1630941350'
  /api/o11y/log/log_volumes:
    get:
      tags:
      - "[Manager] Monitoring Log"
      summary: LogVolumeQuery
      description: Retrieve log volumes (metric time series data) for the given period.
      operationId: get-log-volumes
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "timestamp" : "2025-10-01T00:54:27",
                "status" : "SUCCESS",
                "code" : "OK",
                "message" : "Successfully retrieved log volume data.",
                "requestId" : "string",
                "data" : {
                  "result" : {
                    "data" : [ {
                      "metric" : {
                        "env" : "string",
                        "app" : "string"
                      },
                      "values" : [ {
                        "timestamp" : 0,
                        "value" : "string"
                      } ]
                    } ]
                  }
                }
              }
          schema:
            $ref: '#/definitions/api_o11y_log_log_volumes1332534490'
  /api/o11y/log/query_range:
    get:
      tags:
      - "[Manager] Monitoring Log"
      summary: LogRangeQuery
      description: Retrieve log data for a specific query within a given time range.
      operationId: query-range-logs
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "timestamp" : "2025-10-01T00:54:27",
                "status" : "SUCCESS",
                "code" : "OK",
                "message" : "Successfully retrieved log range data.",
                "requestId" : "string",
                "data" : {
                  "result" : null
                }
              }
          schema:
            $ref: '#/definitions/api_o11y_log_query_range-1819803082'
  /api/o11y/monitoring/influxdb:
    get:
      tags:
      - "[Manager] Monitoring Metric"
      summary: GetAllInfluxDB
      description: Retrieve all InfluxDB servers
      operationId: get-all-influx-db
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : [ {
                  "id" : 0,
                  "url" : "mcmp:8086",
                  "database" : "mydb",
                  "username" : "mc-user",
                  "retention_policy" : "autogen",
                  "password" : "mypw",
                  "uid" : "sdfsj1df33ff"
                } ],
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/InfluxDTO'
  /api/o11y/monitoring/plugins:
    get:
      tags:
      - "[Manager] Environment"
      summary: GetPlugins
      description: Retrieve plugin list
      operationId: get-plugins
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : [ {
                  "seq" : 0,
                  "name" : "string",
                  "pluginId" : "string",
                  "pluginType" : "string"
                } ],
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/ResBody<List<PluginDefDTO>>'
  /api/o11y/monitoring/vm:
    get:
      tags:
      - "[Manager] Monitoring VM Management"
      summary: GetAllVMs
      description: Retrieve all targets
      operationId: get-all-v-ms
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : [ {
                  "name" : "mcmp-vm",
                  "description" : "string",
                  "vm_id" : "vm-1",
                  "influx_seq" : 0,
                  "vm_status" : "RUNNING",
                  "monitoring_service_status" : "ACTIVE",
                  "log_service_status" : "ACTIVE",
                  "ns_id" : "ns-1",
                  "mci_id" : "mci-1"
                } ],
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/VMDTO'
  /api/o11y/trigger/history:
    get:
      tags:
      - "[Trigger] Monitoring Measurement Trigger"
      summary: GetPaginatedTriggerHistories
      description: Get paginated trigger histories
      operationId: get-trigger-histories
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        description: page number (1 .. N)
        required: false
        type: integer
      - name: size
        in: query
        description: size of page (1 .. N)
        required: false
        type: integer
      - name: sortBy
        in: query
        description: sort by properties
        required: false
        type: string
      - name: sortDirection
        in: query
        description: "sort direction (asc, desc)"
        required: false
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "content" : [ ],
                "pageable" : {
                  "pageNumber" : 0,
                  "pageSize" : 1,
                  "sort" : {
                    "sorted" : false,
                    "empty" : true,
                    "unsorted" : true
                  },
                  "offset" : 0,
                  "paged" : true,
                  "unpaged" : false
                },
                "totalPages" : 1,
                "totalElements" : 0,
                "numberOfElements" : 0
              }
          schema:
            $ref: '#/definitions/TriggerHistoryPageResponse'
  /api/o11y/trigger/policy:
    get:
      tags:
      - "[Trigger] Monitoring Measurement Trigger"
      summary: GetPaginatedTriggerPolicies
      description: Get paginated trigger policies
      operationId: get-trigger-policies
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        description: page number (1 .. N)
        required: false
        type: integer
      - name: size
        in: query
        description: size of page (1 .. N)
        required: false
        type: integer
      - name: sortBy
        in: query
        description: sort by properties
        required: false
        type: string
      - name: direction
        in: query
        description: "sort direction (asc, desc)"
        required: false
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "content" : [ ],
                "pageable" : {
                  "pageNumber" : 0,
                  "pageSize" : 1,
                  "sort" : {
                    "sorted" : false,
                    "empty" : true,
                    "unsorted" : true
                  },
                  "offset" : 0,
                  "paged" : true,
                  "unpaged" : false
                },
                "totalPages" : 1,
                "totalElements" : 0,
                "numberOfElements" : 0
              }
          schema:
            $ref: '#/definitions/TriggerPolicyPageResponse'
    post:
      tags:
      - "[Trigger] Monitoring Measurement Trigger"
      summary: CreateTriggerPolicy
      description: Create trigger policy
      operationId: create-trigger-policy
      consumes:
      - application/json;charset=UTF-8
      parameters:
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/TriggerPolicyCreateRequest'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "title" : "CPU Alert Policy",
              "description" : "Alert when CPU usage is high",
              "thresholdCondition" : {
                "info" : 30.0,
                "warning" : 50.0,
                "critical" : 70.0
              },
              "resourceType" : "CPU",
              "aggregationType" : "LAST",
              "holdDuration" : "0m",
              "repeatInterval" : "1h"
            }
      responses:
        "201":
          description: ""
          examples: {}
  /api/o11y/monitoring/influxdb/measurement:
    get:
      tags:
      - "[Manager] Monitoring Metric"
      summary: GetMeasurementFields
      description: Retrieve InfluxDB measurements
      operationId: measurement
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : [ {
                  "measurement" : "string",
                  "fields" : [ {
                    "key" : "cpu",
                    "type" : "Integer"
                  } ]
                } ],
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/FieldDTO'
  /api/o11y/monitoring/influxdb/tag:
    get:
      tags:
      - "[Manager] Monitoring Metric"
      summary: GetMeasurementTags
      description: Retrieve InfluxDB tags
      operationId: tag
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : [ {
                  "measurement" : "cpu",
                  "tags" : [ "host", "mci_id" ]
                } ],
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/TagDTO'
  /api/o11y/trigger/alert/alert-rules:
    get:
      tags:
      - "[Trigger - Only Developer] Monitoring Trigger Event Handler"
      summary: GetAllAlertRules
      description: Get all alert rules
      operationId: get-all-alert-rules
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: "[ ]"
          schema:
            $ref: '#/definitions/AllAlertRulesResponse'
  /api/o11y/trigger/alert/alerts:
    get:
      tags:
      - "[Trigger - Only Developer] Monitoring Trigger Event Handler"
      summary: GetAllAlerts
      description: Get all alerts
      operationId: get-all-alerts
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: "[ ]"
          schema:
            $ref: '#/definitions/AllAlertsResponse'
  /api/o11y/trigger/alert/contact-points:
    get:
      tags:
      - "[Trigger - Only Developer] Monitoring Trigger Event Handler"
      summary: GetAllContactPoints
      description: Get all contact points
      operationId: get-all-contact-points
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: "[ ]"
          schema:
            $ref: '#/definitions/GrafanaManagedReceiverConfig'
  /api/o11y/trigger/alert/health:
    get:
      tags:
      - "[Trigger - Only Developer] Monitoring Trigger Event Handler"
      summary: CheckGrafanaHealthStatus
      description: Check grafana health status
      operationId: check-grafana-health
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "contactPoint" : {
                  "hasData" : true
                },
                "datasource" : {
                  "hasData" : true
                },
                "folder" : {
                  "hasData" : true
                },
                "org" : {
                  "hasData" : true
                }
              }
          schema:
            $ref: '#/definitions/GrafanaHealthCheckResponse'
  /api/o11y/trigger/alert/test-history:
    get:
      tags:
      - "[Trigger - Only Developer] Monitoring Trigger Event Handler"
      summary: GetPaginatedAlertTestHistories
      description: Get paginated alert test histories
      operationId: get-alert-test-histories
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        description: page number (1 .. N)
        required: false
        type: integer
      - name: size
        in: query
        description: size of page (1 .. N)
        required: false
        type: integer
      - name: sortBy
        in: query
        description: sort by properties (id..)
        required: false
        type: string
      - name: direction
        in: query
        description: "sort direction (asc, desc)"
        required: false
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "content" : [ ],
                "pageable" : {
                  "pageNumber" : 0,
                  "pageSize" : 1,
                  "sort" : {
                    "sorted" : false,
                    "empty" : true,
                    "unsorted" : true
                  },
                  "offset" : 0,
                  "paged" : true,
                  "unpaged" : false
                },
                "totalPages" : 1,
                "totalElements" : 0,
                "numberOfElements" : 0
              }
          schema:
            $ref: '#/definitions/AlertTestHistoryPageResponse'
  /api/o11y/trigger/noti/channel:
    get:
      tags:
      - "[Trigger] Notification"
      summary: GetSupportedNotificationChannels
      description: Get supported notification channels
      operationId: get-noti-channels
      produces:
      - application/json
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "notiChannels" : [ {
                  "id" : 1,
                  "name" : "sms_naver-cloud",
                  "type" : "sms",
                  "provider" : "naver-cloud",
                  "baseUrl" : "https://sens.apigw.ntruss.com",
                  "isActive" : true,
                  "createdAt" : "2025-10-01T09:54:29.354212046",
                  "updatedAt" : "2025-10-01T09:54:29.35422562"
                } ]
              }
          schema:
            $ref: '#/definitions/NotiChannelAllResponse'
  /api/o11y/trigger/noti/history:
    get:
      tags:
      - "[Trigger] Notification"
      summary: GetPaginatedNotificationHistories
      description: Get paginated notification histories
      operationId: get-noti-histories
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        description: page number (1 .. N)
        required: false
        type: integer
      - name: size
        in: query
        description: size of page (1 .. N)
        required: false
        type: integer
      - name: sortBy
        in: query
        description: sort by properties(id..)
        required: false
        type: string
      - name: sortDirection
        in: query
        description: "sort direction (asc, desc)"
        required: false
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "content" : [ ],
                "pageable" : {
                  "pageNumber" : 0,
                  "pageSize" : 1,
                  "sort" : {
                    "sorted" : false,
                    "empty" : true,
                    "unsorted" : true
                  },
                  "offset" : 0,
                  "paged" : true,
                  "unpaged" : false
                },
                "totalPages" : 1,
                "totalElements" : 0,
                "numberOfElements" : 0
              }
          schema:
            $ref: '#/definitions/NotiHistoryPageResponse'
  /api/o11y/trigger/policy/{id}:
    delete:
      tags:
      - "[Trigger] Monitoring Measurement Trigger"
      summary: DeleteTriggerPolicy
      description: Delete trigger policy
      operationId: delete-trigger-policy
      parameters:
      - name: id
        in: path
        description: trigger policy id
        required: true
        type: integer
      responses:
        "202":
          description: ""
          examples: {}
  /api/o11y/log/labels/{label}/values:
    get:
      tags:
      - "[Manager] Monitoring Log"
      summary: LabelValueQuery
      description: Retrieve the list of values for a specific label key.
      operationId: get-label-values
      produces:
      - application/json
      parameters:
      - name: label
        in: path
        description: "Label key (e.g., app, env)"
        required: true
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "timestamp" : "2025-10-01T00:54:27",
                "status" : "SUCCESS",
                "code" : "OK",
                "message" : "Successfully retrieved label values.",
                "requestId" : "string",
                "data" : {
                  "result" : {
                    "data" : [ "string", "string" ]
                  }
                }
              }
          schema:
            $ref: '#/definitions/api_o11y_log_labels_label_values-389755828'
  /api/o11y/monitoring/{nsId}/{mciId}/vm:
    get:
      tags:
      - "[Manager] Monitoring VM Management"
      summary: GetVMByNsMci
      description: Retrieve target list by NS/MCI
      operationId: get-vm-by-ns-mci
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : [ {
                  "name" : "mcmp-vm",
                  "description" : "string",
                  "vm_id" : "vm-1",
                  "influx_seq" : 0,
                  "vm_status" : "RUNNING",
                  "monitoring_service_status" : "ACTIVE",
                  "log_service_status" : "ACTIVE",
                  "ns_id" : "ns-1",
                  "mci_id" : "mci-1"
                } ],
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/VMDTO'
  /api/o11y/trigger/alert/alert-receiver/test:
    post:
      tags:
      - "[Trigger - Only Developer] Monitoring Trigger Event Handler"
      summary: TestAlertReceiverConnection
      description: Test alert receiver connection
      operationId: test-alert-receiver
      responses:
        "200":
          description: ""
          examples: {}
  /api/o11y/trigger/alert/alerts/search:
    get:
      tags:
      - "[Trigger - Only Developer] Monitoring Trigger Event Handler"
      summary: SearchAlertsByTitle
      description: Search alerts by title
      operationId: get-alert-by-title
      produces:
      - application/json
      parameters:
      - name: title
        in: query
        description: alert title to search
        required: true
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: "[ ]"
          schema:
            $ref: '#/definitions/AlertResponse'
  /api/o11y/trigger/history/{id}/comment:
    put:
      tags:
      - "[Trigger] Monitoring Measurement Trigger"
      summary: UpdateTriggerHistoryComment
      description: Update trigger history comment
      operationId: update-trigger-history-comment
      consumes:
      - application/json;charset=UTF-8
      parameters:
      - name: id
        in: path
        description: trigger history id
        required: true
        type: integer
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/TriggerHistoryCommentUpdateRequest'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "comment" : "Alert resolved - false positive"
            }
      responses:
        "200":
          description: ""
          examples: {}
  /api/o11y/trigger/policy/{id}/channel:
    put:
      tags:
      - "[Trigger] Monitoring Measurement Trigger"
      summary: UpdateTriggerPolicyNotificationChannels
      description: Update trigger policy notification channels
      operationId: update-trigger-policy-noti-channel
      consumes:
      - application/json;charset=UTF-8
      parameters:
      - name: id
        in: path
        description: trigger policy id
        required: true
        type: integer
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/TriggerPolicyNotiChannelUpdateRequest'
        x-examples:
          application/json;charset=UTF-8: |-
            [ {
              "channelName" : "kakao_naver-cloud",
              "recipients" : [ "+82-10-1234-5678" ]
            }, {
              "channelName" : "sms_naver-cloud",
              "recipients" : [ "+82-10-1234-5678" ]
            }, {
              "channelName" : "email_smtp.gmail.com",
              "recipients" : [ "admin@example.com" ]
            }, {
              "channelName" : "slack",
              "recipients" : [ "C09GRESEF" ]
            } ]
      responses:
        "202":
          description: ""
          examples: {}
  /api/o11y/trigger/policy/{id}/vm:
    post:
      tags:
      - "[Trigger] Monitoring Measurement Trigger"
      summary: AddTriggerVM
      description: Add trigger vm
      operationId: add-trigger-vm
      consumes:
      - application/json;charset=UTF-8
      parameters:
      - name: id
        in: path
        description: trigger policy id
        required: true
        type: integer
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/TriggerVMAddRequest'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "namespaceId" : "first-ns",
              "vmScope" : "mci",
              "vmId" : "test01"
            }
      responses:
        "202":
          description: ""
          examples: {}
    delete:
      tags:
      - "[Trigger] Monitoring Measurement Trigger"
      summary: RemoveTriggerVM
      description: Remove trigger vm
      operationId: remove-trigger-vm
      consumes:
      - application/json;charset=UTF-8
      parameters:
      - name: id
        in: path
        description: trigger policy id
        required: true
        type: integer
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/TriggerVMRemoveRequest'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "namespaceId" : "namespace-1",
              "vmScope" : "vm",
              "vmId" : "vm-1"
            }
      responses:
        "202":
          description: ""
          examples: {}
  /api/o11y/monitoring/influxdb/metric/{nsId}/{mciId}:
    post:
      tags:
      - "[Manager] Monitoring Metric"
      summary: QueryMetrics
      description: Retrieve InfluxDB metrics
      operationId: query
      consumes:
      - application/json;charset=UTF-8
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/MetricRequestDTO'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "measurement" : "cpu",
              "range" : "1h",
              "group_time" : "12m",
              "group_by" : [ "ns_id" ],
              "limit" : 0,
              "fields" : [ {
                "function" : "mean",
                "field" : "usage_idle"
              } ],
              "conditions" : [ {
                "key" : "cpu",
                "value" : "cpu-total"
              } ]
            }
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : [ {
                  "name" : "cpu",
                  "columns" : [ "cpu", "ns_id" ],
                  "tags" : null,
                  "values" : [ [ "string", 0 ] ]
                } ],
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/MetricDTO'
  /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}:
    get:
      tags:
      - "[Manager] Monitoring VM Management"
      summary: GetVM
      description: Retrieve single target
      operationId: get-vm
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      - name: vmId
        in: path
        description: "vmId (e.g., vm-1)"
        required: true
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : {
                  "name" : "mcmp-vm",
                  "description" : "string",
                  "vm_id" : "vm-1",
                  "influx_seq" : 0,
                  "vm_status" : "RUNNING",
                  "monitoring_service_status" : "ACTIVE",
                  "log_service_status" : "ACTIVE",
                  "ns_id" : "ns-1",
                  "mci_id" : "mci-1"
                },
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/VMDTO'
    post:
      tags:
      - "[Manager] Monitoring VM Management"
      summary: PostVM
      description: Create target
      operationId: post-vm
      consumes:
      - application/json;charset=UTF-8
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      - name: vmId
        in: path
        description: "vmId (e.g., vm-1)"
        required: true
        type: string
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/VMRequestDTO'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "name" : "mcmp-vm",
              "description" : "string"
            }
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : {
                  "name" : "mcmp-vm",
                  "description" : "string",
                  "vm_id" : "vm-1",
                  "influx_seq" : 0,
                  "vm_status" : "RUNNING",
                  "monitoring_service_status" : "ACTIVE",
                  "log_service_status" : "ACTIVE",
                  "ns_id" : "ns-1",
                  "mci_id" : "mci-1"
                },
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/VMDTO'
    put:
      tags:
      - "[Manager] Monitoring VM Management"
      summary: PutVM
      description: Update target
      operationId: put-vm
      consumes:
      - application/json;charset=UTF-8
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      - name: vmId
        in: path
        description: "vmId (e.g., vm-1)"
        required: true
        type: string
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/VMRequestDTO'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "name" : "mcmp-vm",
              "description" : "string"
            }
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : {
                  "name" : "mcmp-vm",
                  "description" : "string",
                  "vm_id" : "vm-1",
                  "influx_seq" : 0,
                  "vm_status" : "RUNNING",
                  "monitoring_service_status" : "ACTIVE",
                  "log_service_status" : "ACTIVE",
                  "ns_id" : "ns-1",
                  "mci_id" : "mci-1"
                },
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/VMDTO'
    delete:
      tags:
      - "[Manager] Monitoring VM Management"
      summary: DeleteVM
      description: Delete target
      operationId: delete-vm
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      - name: vmId
        in: path
        description: "vmId (e.g., vm-1)"
        required: true
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : null,
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/api_o11y_monitoring_nsId_mciId_vm_vmId-1790047999'
  /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}/item:
    get:
      tags:
      - "[Manager] Monitoring VM Item Management"
      summary: GetMonitoringItems
      description: Retrieve monitoring item list
      operationId: get-items
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1"
        required: true
        type: string
      - name: vmId
        in: path
        description: "vmId (e.g., vm-1)"
        required: true
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : [ {
                  "seq" : 0,
                  "nsId" : "ns-1",
                  "mciId" : "mci-1",
                  "vmId" : "vm-1",
                  "name" : "mcmp-vm",
                  "state" : "string",
                  "pluginSeq" : 1,
                  "pluginName" : "cpu",
                  "pluginType" : "INPUT",
                  "pluginConfig" : "string"
                } ],
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/MonitoringItemDTO'
    post:
      tags:
      - "[Manager] Monitoring VM Item Management"
      summary: AddMonitoringItem
      description: Add monitoring item
      operationId: post-item
      consumes:
      - application/json;charset=UTF-8
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      - name: vmId
        in: path
        description: "vmId (e.g., vm-1)"
        required: true
        type: string
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/MonitoringItemRequestDTO'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "pluginSeq" : 0,
              "pluginConfig" : "string"
            }
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : null,
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/ResBody<Void>'
    put:
      tags:
      - "[Manager] Monitoring VM Item Management"
      summary: UpdateMonitoringItem
      description: Update monitoring item
      operationId: put-item
      consumes:
      - application/json;charset=UTF-8
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      - name: vmId
        in: path
        description: "vmId (e.g., vm-1)"
        required: true
        type: string
      - in: body
        name: ""
        required: false
        schema:
          $ref: '#/definitions/MonitoringItemUpdateDTO'
        x-examples:
          application/json;charset=UTF-8: |-
            {
              "seq" : 0,
              "pluginConfig" : "string"
            }
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : null,
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}/item/{itemSeq}:
    delete:
      tags:
      - "[Manager] Monitoring VM Item Management"
      summary: DeleteMonitoringItem
      description: Delete monitoring item
      operationId: delete-item
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        description: "nsId (e.g., ns-1)"
        required: true
        type: string
      - name: mciId
        in: path
        description: "mciId (e.g., mci-1)"
        required: true
        type: string
      - name: vmId
        in: path
        description: "vmId (e.g., vm-1)"
        required: true
        type: string
      - name: itemSeq
        in: path
        description: "Item Seq (e.g., 1)"
        required: true
        type: string
      responses:
        "200":
          description: ""
          examples:
            application/json: |-
              {
                "rs_code" : "0000",
                "rs_msg" : "success",
                "data" : null,
                "error_message" : ""
              }
          schema:
            $ref: '#/definitions/ResBody<Void>'
definitions:
  AlertTestHistoryPageResponse:
    type: object
    properties:
      numberOfElements:
        type: number
        description: number of elements
      totalPages:
        type: number
        description: total pages
      pageable:
        type: object
        description: specific page info
        properties: {}
      content:
        type: array
        description: alert test history list
        items: {}
      totalElements:
        type: number
        description: total elements
  NotiHistoryPageResponse:
    type: object
    properties:
      numberOfElements:
        type: number
        description: number of elements
      totalPages:
        type: number
        description: total pages
      pageable:
        type: object
        description: specific page info
        properties: {}
      content:
        type: array
        description: notification history list
        items: {}
      totalElements:
        type: number
        description: total elements
  AlertResponse:
    type: array
    description: List of matching alerts
    items: {}
  VMRequestDTO:
    type: object
    properties:
      name:
        type: string
        description: "Target name(e.g.,  mcmp-vm)"
      description:
        type: string
        description: Description
    example: |-
      {
        "name" : "mcmp-vm",
        "description" : "string"
      }
  TriggerPolicyPageResponse:
    type: object
    properties:
      numberOfElements:
        type: number
        description: number of elements
      totalPages:
        type: number
        description: total pages
      pageable:
        type: object
        description: specific page info
        properties: {}
      content:
        type: array
        description: trigger policy list
        items: {}
      totalElements:
        type: number
        description: total elements
  MonitoringItemDTO:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      data:
        type: array
        description: Monitoring item list
        items:
          type: object
          properties:
            mciId:
              type: string
              description: "mciId(e.g., mci-1"
            pluginType:
              type: string
              description: "Plugin type (e.g., INPUT)"
            nsId:
              type: string
              description: "nsId(e.g., ns-1"
            pluginName:
              type: string
              description: "Plugin name (e.g., cpu)"
            vmId:
              type: string
              description: "vmId(e.g., vm-1"
            name:
              type: string
              description: "Item name (e.g., cpu)"
            pluginSeq:
              type: number
              description: "Plugin sequence (e.g., 1)"
            state:
              type: string
              description: State
            seq:
              type: number
              description: "Item Sequence (e.g., 1)"
            pluginConfig:
              type: string
              description: Plugin configuration
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g., Success)"
  api_o11y_log_labels_label_values-389755828:
    type: object
    properties:
      code:
        type: string
        description: Response code
      data:
        type: object
        properties:
          result:
            type: object
            properties:
              data:
                type: array
                description: List of label values
                items: {}
      requestId:
        type: string
        description: Request ID
      message:
        type: string
        description: Response message
      status:
        type: string
        description: Response status
      timestamp:
        type: string
        description: Response timestamp
  api_o11y_monitoring_nsId_mciId_vm_vmId-1790047999:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g., Success)"
  GrafanaHealthCheckResponse:
    type: object
    properties:
      folder:
        type: object
        properties:
          hasData:
            type: boolean
            description: folder is set up correctly
      org:
        type: object
        properties:
          hasData:
            type: boolean
            description: org is set up correctly
      contactPoint:
        type: object
        properties:
          hasData:
            type: boolean
            description: contact point is set up correctly
      datasource:
        type: object
        properties:
          hasData:
            type: boolean
            description: datasource is set up correctly
  VMDTO:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      data:
        type: array
        description: Target information list
        items:
          type: object
          properties:
            influx_seq:
              type: number
              description: Influx sequence
            vm_id:
              type: string
              description: vmId
            mci_id:
              type: string
              description: "mciId (e.g.,  ci-1)"
            vm_status:
              type: string
              description: Target status
              enum:
              - RUNNING
              - FAILED
            log_service_status:
              type: string
              description: Log agent service status
              enum:
              - ACTIVE
              - INACTIVE
              - ACTIVATING
              - DEACTIVATING
              - RELOADING
              - NOT_EXIST
              - FAILED
            ns_id:
              type: string
              description: "nsId (e.g., ns-1)"
            monitoring_service_status:
              type: string
              description: Monitoring agent service status
              enum:
              - ACTIVE
              - INACTIVE
              - ACTIVATING
              - DEACTIVATING
              - RELOADING
              - NOT_EXIST
              - FAILED
            name:
              type: string
              description: "Target name (e.g., mcmp-vm)"
            description:
              type: string
              description: Description
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g., Success)"
  api_o11y_log_labels-1630941350:
    type: object
    properties:
      code:
        type: string
        description: Response code
      data:
        type: object
        properties:
          result:
            type: object
            properties:
              labels:
                type: array
                description: List of labels
                items: {}
      requestId:
        type: string
        description: Request ID
      message:
        type: string
        description: Response message
      status:
        type: string
        description: Response status
      timestamp:
        type: string
        description: Response timestamp
  MonitoringItemRequestDTO:
    type: object
    properties:
      pluginSeq:
        type: number
        description: Plugin sequence
      pluginConfig:
        type: string
        description: Plugin configuration
    example: |-
      {
        "pluginSeq" : 0,
        "pluginConfig" : "string"
      }
  ResBody<Void>:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      data:
        type: object
        description: Response data
        properties: {}
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g., Success)"
  TriggerVMAddRequest:
    type: object
    properties:
      vmScope:
        type: string
        description: "vm scope (vm, mci)"
      vmId:
        type: string
        description: vm id
      namespaceId:
        type: string
        description: namespace id
    example: |-
      {
        "namespaceId" : "first-ns",
        "vmScope" : "mci",
        "vmId" : "test01"
      }
  FieldDTO:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      data:
        type: array
        description: List of measurement information
        items:
          type: object
          properties:
            fields:
              type: array
              description: List of field information
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: "Field type (e.g., integer)"
                  key:
                    type: string
                    description: "Field key (e.g., server_time)"
            measurement:
              type: string
              description: "Measurement name(e.g., cpu)"
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g., Success)"
  MonitoringItemUpdateDTO:
    type: object
    properties:
      seq:
        type: number
        description: "Item Sequence (e.g., 1)"
      pluginConfig:
        type: string
        description: Plugin configuration
    example: |-
      {
        "seq" : 0,
        "pluginConfig" : "string"
      }
  AllAlertRulesResponse:
    type: array
    description: List of alert rules
    items: {}
  TagDTO:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      data:
        type: array
        description: List of tag information
        items:
          type: object
          properties:
            measurement:
              type: string
              description: "Measurement name (e.g., cpu)"
            tags:
              type: array
              description: List of tags
              items: {}
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g., Success)"
  TriggerHistoryCommentUpdateRequest:
    type: object
    properties:
      comment:
        type: string
        description: comment to update
    example: |-
      {
        "comment" : "Alert resolved - false positive"
      }
  TriggerPolicyNotiChannelUpdateRequest:
    type: array
    description: List of notification channel update objects
    items:
      type: object
      description: List of notification channel update objects
      properties:
        recipients:
          type: array
          description: list of recipients
          items: {}
        channelName:
          type: string
          description: notification channel name
    example: |-
      [ {
        "channelName" : "kakao_naver-cloud",
        "recipients" : [ "+82-10-1234-5678" ]
      }, {
        "channelName" : "sms_naver-cloud",
        "recipients" : [ "+82-10-1234-5678" ]
      }, {
        "channelName" : "email_smtp.gmail.com",
        "recipients" : [ "admin@example.com" ]
      }, {
        "channelName" : "slack",
        "recipients" : [ "C09GRESEF" ]
      } ]
  TriggerVMRemoveRequest:
    type: object
    properties:
      vmScope:
        type: string
        description: "vm scope (vm, mci)"
      vmId:
        type: string
        description: vm id
      namespaceId:
        type: string
        description: namespace id
    example: |-
      {
        "namespaceId" : "namespace-1",
        "vmScope" : "vm",
        "vmId" : "vm-1"
      }
  TriggerHistoryPageResponse:
    type: object
    properties:
      numberOfElements:
        type: number
        description: number of elements
      totalPages:
        type: number
        description: total pages
      pageable:
        type: object
        description: specific page info
        properties: {}
      content:
        type: array
        description: trigger history list
        items: {}
      totalElements:
        type: number
        description: total elements
  TriggerPolicyCreateRequest:
    type: object
    properties:
      aggregationType:
        type: string
        description: aggregation type
        enum:
        - MIN
        - MAX
        - AVG
        - LAST
      repeatInterval:
        type: string
        description: repeat interval of evaluation(1m~24h)
      holdDuration:
        type: string
        description: minimum duration for firing alert(0s~1h)
      description:
        type: string
        description: trigger policy description
      thresholdCondition:
        type: object
        description: threshold condition object
        properties:
          critical:
            type: number
            description: threshold value for critical level(1~100)
          warning:
            type: number
            description: threshold value for warning level(1~100)
          info:
            type: number
            description: threshold value for info level(1~100)
      title:
        type: string
        description: trigger policy title
      resourceType:
        type: string
        description: resource type
        enum:
        - CPU
        - MEMORY
        - DISK
    example: |-
      {
        "title" : "CPU Alert Policy",
        "description" : "Alert when CPU usage is high",
        "thresholdCondition" : {
          "info" : 30.0,
          "warning" : 50.0,
          "critical" : 70.0
        },
        "resourceType" : "CPU",
        "aggregationType" : "LAST",
        "holdDuration" : "0m",
        "repeatInterval" : "1h"
      }
  NotiChannelAllResponse:
    type: object
    properties:
      notiChannels:
        type: array
        description: notification channel list
        items:
          type: object
          properties:
            createdAt:
              type: string
              description: notification channel created at
            baseUrl:
              type: string
              description: notification channel baseUrl
            provider:
              type: string
              description: notification channel provider
            name:
              type: string
              description: notification channel name
            id:
              type: number
              description: notification channel id
            isActive:
              type: boolean
              description: notification channel active status
            type:
              type: string
              description: notification channel type
            updatedAt:
              type: string
              description: notification channel updated at
  AllAlertsResponse:
    type: array
    description: List of alerts
    items: {}
  MetricDTO:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      data:
        type: array
        description: List of metric information
        items:
          type: object
          properties:
            columns:
              type: array
              description: List of column names
              items: {}
            values:
              type: array
              description: "List of values (2D array, each row corresponds to columns\
                \ order)"
              items: {}
            name:
              type: string
              description: "Measurement name (e.g., cpu)"
            tags:
              type: object
              description: Tag information
              properties: {}
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g.,  Success)"
  GrafanaManagedReceiverConfig:
    type: array
    description: List of contact points
    items: {}
  api_o11y_log_log_volumes1332534490:
    type: object
    properties:
      code:
        type: string
        description: Response code
      data:
        type: object
        properties:
          result:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    metric:
                      type: object
                      description: Metric key-value map
                      properties:
                        '*':
                          type: string
                          description: "Metric dynamic fields (e.g., app, env)"
                    values:
                      type: array
                      items:
                        type: object
                        properties:
                          value:
                            type: string
                            description: Measured value
                          timestamp:
                            type: number
                            description: Timestamp
      requestId:
        type: string
        description: Request ID
      message:
        type: string
        description: Response message
      status:
        type: string
        description: Response status
      timestamp:
        type: string
        description: Response timestamp
  InfluxDTO:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      data:
        type: array
        description: List of InfluxDB information
        items:
          type: object
          properties:
            uid:
              type: string
              description: "UID (e.g.,  1)"
            password:
              type: string
              description: "Password (e.g., mypw"
            database:
              type: string
              description: "Database name (e.g.,  db1)"
            retention_policy:
              type: string
              description: "Retention policy (e.g., autogen)"
            id:
              type: number
              description: "ID (e.g.,  1)"
            url:
              type: string
              description: "InfluxDB URL (e.g., localhost:8086)"
            username:
              type: string
              description: "Username (e.g., mc-user)"
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g., Success)"
  api_o11y_log_query_range-1819803082:
    type: object
    properties:
      code:
        type: string
        description: Response code
      data:
        type: object
        properties:
          result:
            type: object
            description: Log result object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      description: Log value
                    timestamp:
                      type: number
                      description: Timestamp
                    labels:
                      type: object
                      description: Log labels
                      properties:
                        '*':
                          type: string
                          description: Label key-value (dynamic)
              stats:
                type: object
                properties:
                  execTime:
                    type: number
                    description: Execution time (ms)
                  totalLinesProcessed:
                    type: number
                    description: Total lines processed
                  totalEntriesReturned:
                    type: number
                    description: Total entries returned
                  totalBytesProcessed:
                    type: number
                    description: Total bytes processed
              status:
                type: string
                description: Log status
      requestId:
        type: string
        description: Request ID
      message:
        type: string
        description: Response message
      status:
        type: string
        description: Response status
      timestamp:
        type: string
        description: Response timestamp
  MetricRequestDTO:
    type: object
    properties:
      limit:
        type: number
        description: Result limit count
      group_by:
        type: array
        description: "List of group by fields (e.g., [ns_id, mci_id])"
        items: {}
      range:
        type: string
        description: "Query range (e.g., 1h)"
      conditions:
        type: array
        description: List of condition filters
        items:
          type: object
          properties:
            value:
              type: string
              description: "Condition value (e.g., cpu-total)"
            key:
              type: string
              description: "Condition key (e.g., cpu)"
      fields:
        type: array
        description: List of fields to query
        items:
          type: object
          properties:
            field:
              type: string
              description: "Field name (e.g., usage_idle)"
            function:
              type: string
              description: "Aggregation function (e.g., mean, max, etc.)"
      group_time:
        type: string
        description: Grouping unit
      measurement:
        type: string
        description: "Measurement name (e.g., cpu)"
    example: |-
      {
        "measurement" : "cpu",
        "range" : "1h",
        "group_time" : "12m",
        "group_by" : [ "ns_id" ],
        "limit" : 0,
        "fields" : [ {
          "function" : "mean",
          "field" : "usage_idle"
        } ],
        "conditions" : [ {
          "key" : "cpu",
          "value" : "cpu-total"
        } ]
      }
  ResBody<List<PluginDefDTO>>:
    type: object
    properties:
      error_message:
        type: string
        description: Error message
      data:
        type: array
        description: Plugin list
        items:
          type: object
          properties:
            pluginType:
              type: string
              description: "Plugin type (e.g.,  INPUT)"
            pluginId:
              type: string
              description: "Plugin ID (e.g.,  [[inputs.cpu]])"
            name:
              type: string
              description: "Plugin name (e.g., cpu)"
            seq:
              type: number
              description: "Plugin sequence (e.g., 1)"
      rs_code:
        type: string
        description: "Response code (e.g., 0000)"
      rs_msg:
        type: string
        description: "Response message (e.g., Success)"
