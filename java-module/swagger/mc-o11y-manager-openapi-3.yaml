openapi: 3.0.1
info:
  title: mc-o11y-manager-openapi-3
  description: "Multi-Cloud Observability Manager API for managing alert policies,\
    \ notification channels, and alert history"
  version: 1.0.0
servers:
- url: localhost:8080
tags: []
paths:
  /api/o11y/monitoring/influxdb:
    get:
      tags:
      - "[Monitoring metric] Monitoring metric"
      summary: GetAllInfluxDB
      description: Retrieve all InfluxDB servers
      operationId: get-all-influx-db
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfluxDTO'
              examples:
                get-all-influx-db:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : [ {
                        "id" : 0,
                        "url" : "string",
                        "database" : "string",
                        "username" : "string",
                        "retention_policy" : "string",
                        "password" : "string",
                        "uid" : "string"
                      } ],
                      "error_message" : ""
                    }
  /api/o11y/monitoring/plugins:
    get:
      tags:
      - "[System] environment"
      summary: GetPlugins
      description: Retrieve plugin list
      operationId: get-plugins
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBody<List<PluginDefDTO>>'
              examples:
                get-plugins:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : [ {
                        "seq" : 0,
                        "name" : "string",
                        "pluginId" : "string",
                        "pluginType" : "string"
                      } ],
                      "error_message" : ""
                    }
  /api/o11y/monitoring/vm:
    get:
      tags:
      - "[VM] Monitoring vm management"
      summary: GetAllVMs
      description: Retrieve all targets
      operationId: get-all-v-ms
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMDTO'
              examples:
                get-all-v-ms:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : [ {
                        "name" : "string",
                        "description" : "string",
                        "vm_id" : "string",
                        "influx_seq" : 0,
                        "vm_status" : "RUNNING",
                        "monitoring_service_status" : "ACTIVE",
                        "log_service_status" : "ACTIVE",
                        "ns_id" : "string",
                        "mci_id" : "string"
                      } ],
                      "error_message" : ""
                    }
  /api/o11y/noti/channel:
    get:
      tags:
      - "[Trigger] notification"
      summary: GetSupportedNotificationChannels
      description: Get supported notification channels
      operationId: get-noti-channels
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotiChannelAllResponse'
              examples:
                get-noti-channels:
                  value: |-
                    {
                      "notiChannels" : [ {
                        "id" : 1,
                        "name" : "sms_naver-cloud",
                        "type" : "sms",
                        "provider" : "naver-cloud",
                        "baseUrl" : "https://sens.apigw.ntruss.com",
                        "isActive" : true,
                        "createdAt" : "2025-09-22T12:52:49.245884658",
                        "updatedAt" : "2025-09-22T12:52:49.245899652"
                      } ]
                    }
  /api/o11y/noti/history:
    get:
      tags:
      - "[Trigger] notification"
      summary: GetPaginatedNotificationHistories
      description: Get paginated notification histories
      operationId: get-noti-histories
      parameters:
      - name: page
        in: query
        description: page number (1 .. N)
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size of page (1 .. N)
        required: false
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: sort by properties
        required: false
        schema:
          type: string
      - name: sortDirection
        in: query
        description: "sort direction (asc, desc)"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotiHistoryPageResponse'
              examples:
                get-noti-histories:
                  value: |-
                    {
                      "content" : [ ],
                      "pageable" : {
                        "pageNumber" : 0,
                        "pageSize" : 1,
                        "sort" : {
                          "sorted" : false,
                          "empty" : true,
                          "unsorted" : true
                        },
                        "offset" : 0,
                        "paged" : true,
                        "unpaged" : false
                      },
                      "totalPages" : 1,
                      "totalElements" : 0,
                      "numberOfElements" : 0
                    }
  /api/o11y/trigger/history:
    get:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: GetPaginatedTriggerHistories
      description: Get paginated trigger histories
      operationId: get-trigger-histories
      parameters:
      - name: page
        in: query
        description: page number (1 .. N)
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size of page (1 .. N)
        required: false
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: sort by properties
        required: false
        schema:
          type: string
      - name: sortDirection
        in: query
        description: "sort direction (asc, desc)"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerHistoryPageResponse'
              examples:
                get-trigger-histories:
                  value: |-
                    {
                      "content" : [ ],
                      "pageable" : {
                        "pageNumber" : 0,
                        "pageSize" : 1,
                        "sort" : {
                          "sorted" : false,
                          "empty" : true,
                          "unsorted" : true
                        },
                        "offset" : 0,
                        "paged" : true,
                        "unpaged" : false
                      },
                      "totalPages" : 1,
                      "totalElements" : 0,
                      "numberOfElements" : 0
                    }
  /api/o11y/trigger/policy:
    get:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: GetPaginatedTriggerPolicies
      description: Get paginated trigger policies
      operationId: get-trigger-policies
      parameters:
      - name: page
        in: query
        description: page number (1 .. N)
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size of page (1 .. N)
        required: false
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: sort by properties
        required: false
        schema:
          type: string
      - name: direction
        in: query
        description: "sort direction (asc, desc)"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerPolicyPageResponse'
              examples:
                get-trigger-policies:
                  value: |-
                    {
                      "content" : [ ],
                      "pageable" : {
                        "pageNumber" : 0,
                        "pageSize" : 1,
                        "sort" : {
                          "sorted" : false,
                          "empty" : true,
                          "unsorted" : true
                        },
                        "offset" : 0,
                        "paged" : true,
                        "unpaged" : false
                      },
                      "totalPages" : 1,
                      "totalElements" : 0,
                      "numberOfElements" : 0
                    }
    post:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: CreateTriggerPolicy
      description: Create trigger policy
      operationId: create-trigger-policy
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TriggerPolicyCreateRequest'
            examples:
              create-trigger-policy:
                value: |-
                  {
                    "title" : "CPU Alert Policy",
                    "description" : "Alert when CPU usage is high",
                    "thresholdCondition" : {
                      "info" : 30.0,
                      "warning" : 50.0,
                      "critical" : 70.0
                    },
                    "resourceType" : "CPU",
                    "aggregationType" : "LAST",
                    "holdDuration" : "0m",
                    "repeatInterval" : "1h"
                  }
      responses:
        "201":
          description: "201"
  /api/v1/alert/alert-rules:
    get:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: GetAllAlertRules
      description: Get all alert rules
      operationId: get-all-alert-rules
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllAlertRulesResponse'
              examples:
                get-all-alert-rules:
                  value: "[ ]"
  /api/v1/alert/alerts:
    get:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: GetAllAlerts
      description: Get all alerts
      operationId: get-all-alerts
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllAlertsResponse'
              examples:
                get-all-alerts:
                  value: "[ ]"
  /api/v1/alert/contact-points:
    get:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: GetAllContactPoints
      description: Get all contact points
      operationId: get-all-contact-points
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrafanaManagedReceiverConfig'
              examples:
                get-all-contact-points:
                  value: "[ ]"
  /api/v1/alert/health:
    get:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: CheckGrafanaHealthStatus
      description: Check grafana health status
      operationId: check-grafana-health
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrafanaHealthCheckResponse'
              examples:
                check-grafana-health:
                  value: |-
                    {
                      "contactPoint" : {
                        "hasData" : true
                      },
                      "datasource" : {
                        "hasData" : true
                      },
                      "folder" : {
                        "hasData" : true
                      },
                      "org" : {
                        "hasData" : true
                      }
                    }
  /api/v1/alert/test-history:
    get:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: GetPaginatedAlertTestHistories
      description: Get paginated alert test histories
      operationId: get-alert-test-histories
      parameters:
      - name: page
        in: query
        description: page number (1 .. N)
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size of page (1 .. N)
        required: false
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: sort by properties
        required: false
        schema:
          type: string
      - name: direction
        in: query
        description: "sort direction (asc, desc)"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertTestHistoryPageResponse'
              examples:
                get-alert-test-histories:
                  value: |-
                    {
                      "content" : [ ],
                      "pageable" : {
                        "pageNumber" : 0,
                        "pageSize" : 1,
                        "sort" : {
                          "sorted" : false,
                          "empty" : true,
                          "unsorted" : true
                        },
                        "offset" : 0,
                        "paged" : true,
                        "unpaged" : false
                      },
                      "totalPages" : 1,
                      "totalElements" : 0,
                      "numberOfElements" : 0
                    }
  /api/v1/log/labels:
    get:
      tags:
      - "[Monitoring log] Monitoring log"
      summary: Log Labels Query API
      description: Retrieve the list of label keys provided by Loki.
      operationId: get-labels
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-log-labels-258413105'
              examples:
                get-labels:
                  value: |-
                    {
                      "timestamp" : "2025-09-22T03:52:47",
                      "status" : "SUCCESS",
                      "code" : "OK",
                      "message" : "레이블 목록 조회 성공하였습니다.",
                      "requestId" : "string",
                      "data" : {
                        "result" : {
                          "labels" : [ "string", "string" ]
                        }
                      }
                    }
  /api/v1/log/log_volumes:
    get:
      tags:
      - "[Monitoring log] Monitoring log"
      summary: Log Volume Query API
      description: Retrieve log volumes (metric time series data) for the given period.
      operationId: get-log-volumes
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-log-log_volumes794457377'
              examples:
                get-log-volumes:
                  value: |-
                    {
                      "timestamp" : "2025-09-22T03:52:47",
                      "status" : "SUCCESS",
                      "code" : "OK",
                      "message" : "로그 볼륨 데이터 조회 성공하였습니다.",
                      "requestId" : "string",
                      "data" : {
                        "result" : {
                          "data" : [ {
                            "metric" : {
                              "env" : "string",
                              "app" : "string"
                            },
                            "values" : [ {
                              "timestamp" : 0,
                              "value" : "string"
                            } ]
                          } ]
                        }
                      }
                    }
  /api/v1/log/query_range:
    get:
      tags:
      - "[Monitoring log] Monitoring log"
      summary: Log Range Query API
      description: Retrieve log data for a specific query within a given time range.
      operationId: query-range-logs
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-log-query_range942726149'
              examples:
                query-range-logs:
                  value: |-
                    {
                      "timestamp" : "2025-09-22T03:52:47",
                      "status" : "SUCCESS",
                      "code" : "OK",
                      "message" : "로그 기간 데이터 읽기 성공하였습니다.",
                      "requestId" : "string",
                      "data" : {
                        "result" : null
                      }
                    }
  /api/o11y/monitoring/influxdb/measurement:
    get:
      tags:
      - "[Monitoring metric] Monitoring metric"
      summary: GetMeasurementFields
      description: Retrieve InfluxDB measurements
      operationId: measurement
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldDTO'
              examples:
                measurement:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : [ {
                        "measurement" : "string",
                        "fields" : [ {
                          "key" : "string",
                          "type" : "string"
                        } ]
                      } ],
                      "error_message" : ""
                    }
  /api/o11y/monitoring/influxdb/tag:
    get:
      tags:
      - "[Monitoring metric] Monitoring metric"
      summary: GetMeasurementTags
      description: Retrieve InfluxDB tags
      operationId: tag
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDTO'
              examples:
                tag:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : [ {
                        "measurement" : "string",
                        "tags" : [ "string", "string" ]
                      } ],
                      "error_message" : ""
                    }
  /api/o11y/trigger/policy/{id}:
    delete:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: DeleteTriggerPolicy
      description: Delete trigger policy
      operationId: delete-trigger-policy
      parameters:
      - name: id
        in: path
        description: trigger policy id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: "202"
  /api/v1/alert/alert-receiver/test:
    post:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: TestAlertReceiverConnection
      description: Test alert receiver connection
      operationId: test-alert-receiver
      responses:
        "200":
          description: "200"
  /api/v1/alert/alerts/search:
    get:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: SearchAlertsByTitle
      description: Search alerts by title
      operationId: get-alert-by-title
      parameters:
      - name: title
        in: query
        description: alert title to search
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertResponse'
              examples:
                get-alert-by-title:
                  value: "[ ]"
  /api/o11y/monitoring/{NS ID}/{mciId}/vm:
    get:
      tags:
      - "[VM] Monitoring vm management"
      summary: GetVMByNsMci
      description: Retrieve target list by NS/MCI
      operationId: get-vm-by-ns-mci
      parameters:
      - name: NS ID
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMDTO'
              examples:
                get-vm-by-ns-mci:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : [ {
                        "name" : "string",
                        "description" : "string",
                        "vm_id" : "string",
                        "influx_seq" : 0,
                        "vm_status" : "RUNNING",
                        "monitoring_service_status" : "ACTIVE",
                        "log_service_status" : "ACTIVE",
                        "ns_id" : "string",
                        "mci_id" : "string"
                      } ],
                      "error_message" : ""
                    }
  /api/o11y/trigger/history/{id}/comment:
    put:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: UpdateTriggerHistoryComment
      description: Update trigger history comment
      operationId: update-trigger-history-comment
      parameters:
      - name: id
        in: path
        description: trigger history id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TriggerHistoryCommentUpdateRequest'
            examples:
              update-trigger-history-comment:
                value: |-
                  {
                    "comment" : "Alert resolved - false positive"
                  }
      responses:
        "200":
          description: "200"
  /api/o11y/trigger/policy/{id}/channel:
    put:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: UpdateTriggerPolicyNotificationChannels
      description: Update trigger policy notification channels
      operationId: update-trigger-policy-noti-channel
      parameters:
      - name: id
        in: path
        description: trigger policy id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TriggerPolicyNotiChannelUpdateRequest'
            examples:
              update-trigger-policy-noti-channel:
                value: |-
                  [ {
                    "channelName" : "sms_ncp",
                    "recipients" : [ "+82-10-1234-5678", "+82-10-9876-5432" ]
                  }, {
                    "channelName" : "email_smtp",
                    "recipients" : [ "admin@example.com", "dev@example.com" ]
                  } ]
      responses:
        "202":
          description: "202"
  /api/o11y/trigger/policy/{id}/vm:
    post:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: AddTriggerVM
      description: Add trigger vm
      operationId: add-trigger-vm
      parameters:
      - name: id
        in: path
        description: trigger policy id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TriggerVMAddRequest'
            examples:
              add-trigger-vm:
                value: |-
                  {
                    "namespaceId" : "namespace-1",
                    "vmScope" : "vm",
                    "vmId" : "vm-1"
                  }
      responses:
        "202":
          description: "202"
    delete:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: RemoveTriggerVM
      description: Remove trigger vm
      operationId: remove-trigger-vm
      parameters:
      - name: id
        in: path
        description: trigger policy id
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TriggerVMRemoveRequest'
            examples:
              remove-trigger-vm:
                value: |-
                  {
                    "namespaceId" : "namespace-1",
                    "vmScope" : "vm",
                    "vmId" : "vm-1"
                  }
      responses:
        "202":
          description: "202"
  /api/v1/log/labels/{label}/values:
    get:
      tags:
      - "[Monitoring log] Monitoring log"
      summary: Label Value Query API
      description: Retrieve the list of values for a specific label key.
      operationId: get-label-values
      parameters:
      - name: label
        in: path
        description: "Label key (e.g., app, env)"
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-log-labels-label-values-2083517687'
              examples:
                get-label-values:
                  value: |-
                    {
                      "timestamp" : "2025-09-22T03:52:47",
                      "status" : "SUCCESS",
                      "code" : "OK",
                      "message" : "레이블 값 목록 조회 성공하였습니다.",
                      "requestId" : "string",
                      "data" : {
                        "result" : {
                          "data" : [ "string", "string" ]
                        }
                      }
                    }
  /api/o11y/monitoring/influxdb/metric/{nsId}/{mciId}:
    post:
      tags:
      - "[Monitoring metric] Monitoring metric"
      summary: QueryMetrics
      description: Retrieve InfluxDB metrics
      operationId: query
      parameters:
      - name: nsId
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/MetricRequestDTO'
            examples:
              query:
                value: |-
                  {
                    "measurement" : "string",
                    "range" : "string",
                    "group_time" : "string",
                    "group_by" : [ "string" ],
                    "limit" : 0,
                    "fields" : [ {
                      "function" : "string",
                      "field" : "string"
                    } ],
                    "conditions" : [ {
                      "key" : "string",
                      "value" : "string"
                    } ]
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDTO'
              examples:
                query:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : [ {
                        "name" : "string",
                        "columns" : [ "string", "string" ],
                        "tags" : null,
                        "values" : [ [ "string", 0 ] ]
                      } ],
                      "error_message" : ""
                    }
  /api/o11y/monitoring/{NS ID}/{mciId}/vm/{vmId}:
    get:
      tags:
      - "[VM] Monitoring vm management"
      summary: GetVM
      description: Retrieve single target
      operationId: get-vm
      parameters:
      - name: NS ID
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: TARGET ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMDTO'
              examples:
                get-vm:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : {
                        "name" : "string",
                        "description" : "string",
                        "vm_id" : "string",
                        "influx_seq" : 0,
                        "vm_status" : "RUNNING",
                        "monitoring_service_status" : "ACTIVE",
                        "log_service_status" : "ACTIVE",
                        "ns_id" : "string",
                        "mci_id" : "string"
                      },
                      "error_message" : ""
                    }
    put:
      tags:
      - "[VM] Monitoring vm management"
      summary: PutVM
      description: Update target
      operationId: put-vm
      parameters:
      - name: NS ID
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: TARGET ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/VMRequestDTO'
            examples:
              put-vm:
                value: |-
                  {
                    "name" : "string",
                    "description" : "string"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMDTO'
              examples:
                put-vm:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : {
                        "name" : "string",
                        "description" : "string",
                        "vm_id" : "string",
                        "influx_seq" : 0,
                        "vm_status" : "RUNNING",
                        "monitoring_service_status" : "ACTIVE",
                        "log_service_status" : "ACTIVE",
                        "ns_id" : "string",
                        "mci_id" : "string"
                      },
                      "error_message" : ""
                    }
    post:
      tags:
      - "[VM] Monitoring vm management"
      summary: PostVM
      description: Create target
      operationId: post-vm
      parameters:
      - name: NS ID
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: TARGET ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/VMRequestDTO'
            examples:
              post-vm:
                value: |-
                  {
                    "name" : "string",
                    "description" : "string"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMDTO'
              examples:
                post-vm:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : {
                        "name" : "string",
                        "description" : "string",
                        "vm_id" : "string",
                        "influx_seq" : 0,
                        "vm_status" : "RUNNING",
                        "monitoring_service_status" : "ACTIVE",
                        "log_service_status" : "ACTIVE",
                        "ns_id" : "string",
                        "mci_id" : "string"
                      },
                      "error_message" : ""
                    }
    delete:
      tags:
      - "[VM] Monitoring vm management"
      summary: DeleteVM
      description: Delete target
      operationId: delete-vm
      parameters:
      - name: NS ID
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: TARGET ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-o11y-monitoring-NS ID-mciId-vm-vmId1796359160'
              examples:
                delete-vm:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : null,
                      "error_message" : ""
                    }
  /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}/item:
    get:
      tags:
      - "[Monitoring item] Monitoring vm item management"
      summary: GetMonitoringItems
      description: Retrieve monitoring item list
      operationId: get-items
      parameters:
      - name: nsId
        in: path
        description: NSID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: TARGET ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringItemDTO'
              examples:
                get-items:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : [ {
                        "seq" : 0,
                        "nsId" : "string",
                        "mciId" : "string",
                        "vmId" : "string",
                        "name" : "string",
                        "state" : "string",
                        "pluginSeq" : 0,
                        "pluginName" : "string",
                        "pluginType" : "string",
                        "pluginConfig" : "string"
                      } ],
                      "error_message" : ""
                    }
    put:
      tags:
      - "[Monitoring item] Monitoring vm item management"
      summary: UpdateMonitoringItem
      description: Update monitoring item
      operationId: put-item
      parameters:
      - name: nsId
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: TARGET ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/MonitoringItemUpdateDTO'
            examples:
              put-item:
                value: |-
                  {
                    "seq" : 0,
                    "pluginConfig" : "string"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBody<Void>'
              examples:
                put-item:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : null,
                      "error_message" : ""
                    }
    post:
      tags:
      - "[Monitoring item] Monitoring vm item management"
      summary: AddMonitoringItem
      description: Add monitoring item
      operationId: post-item
      parameters:
      - name: nsId
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: TARGET ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/MonitoringItemRequestDTO'
            examples:
              post-item:
                value: |-
                  {
                    "pluginSeq" : 0,
                    "pluginConfig" : "string"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBody<Void>'
              examples:
                post-item:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : null,
                      "error_message" : ""
                    }
  /api/o11y/monitoring/{nsId}/{mciId}/vm/{vmId}/item/{itemSeq}:
    delete:
      tags:
      - "[Monitoring item] Monitoring vm item management"
      summary: DeleteMonitoringItem
      description: Delete monitoring item
      operationId: delete-item
      parameters:
      - name: nsId
        in: path
        description: NS ID
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        description: MCI ID
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: TARGET ID
        required: true
        schema:
          type: string
      - name: itemSeq
        in: path
        description: ITEM SEQ
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBody<Void>'
              examples:
                delete-item:
                  value: |-
                    {
                      "rs_code" : "0000",
                      "rs_msg" : "완료되었습니다.",
                      "data" : null,
                      "error_message" : ""
                    }
components:
  schemas:
    MonitoringItemUpdateDTO:
      title: MonitoringItemUpdateDTO
      type: object
      properties:
        seq:
          type: number
          description: Item sequence
        pluginConfig:
          type: string
          description: Plugin configuration
    NotiHistoryPageResponse:
      title: NotiHistoryPageResponse
      type: object
      properties:
        numberOfElements:
          type: number
          description: number of elements
        totalPages:
          type: number
          description: total pages
        pageable:
          type: object
          description: specific page info
        content:
          type: array
          description: notification history list
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        totalElements:
          type: number
          description: total elements
    TriggerPolicyCreateRequest:
      title: TriggerPolicyCreateRequest
      type: object
      properties:
        aggregationType:
          type: string
          description: aggregation type
          enum:
          - MIN
          - MAX
          - AVG
          - LAST
        repeatInterval:
          type: string
          description: repeat interval of evaluation
        holdDuration:
          type: string
          description: minimum duration for firing alert
        description:
          type: string
          description: trigger policy description
        thresholdCondition:
          type: object
          properties:
            critical:
              type: number
              description: threshold value for critical level
            warning:
              type: number
              description: threshold value for warning level
            info:
              type: number
              description: threshold value for info level
          description: threshold condition object
        title:
          type: string
          description: trigger policy title
        resourceType:
          type: string
          description: resource type
          enum:
          - CPU
          - MEMORY
          - DISK
    MonitoringItemRequestDTO:
      title: MonitoringItemRequestDTO
      type: object
      properties:
        pluginSeq:
          type: number
          description: Plugin sequence
        pluginConfig:
          type: string
          description: Plugin configuration
    NotiChannelAllResponse:
      title: NotiChannelAllResponse
      type: object
      properties:
        notiChannels:
          type: array
          description: notification channel list
          items:
            type: object
            properties:
              createdAt:
                type: string
                description: notification channel created at
              baseUrl:
                type: string
                description: notification channel baseUrl
              provider:
                type: string
                description: notification channel provider
              name:
                type: string
                description: notification channel name
              id:
                type: number
                description: notification channel id
              isActive:
                type: boolean
                description: notification channel active status
              type:
                type: string
                description: notification channel type
              updatedAt:
                type: string
                description: notification channel updated at
    TriggerHistoryPageResponse:
      title: TriggerHistoryPageResponse
      type: object
      properties:
        numberOfElements:
          type: number
          description: number of elements
        totalPages:
          type: number
          description: total pages
        pageable:
          type: object
          description: specific page info
        content:
          type: array
          description: trigger history list
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        totalElements:
          type: number
          description: total elements
    InfluxDTO:
      title: InfluxDTO
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        data:
          type: array
          description: List of InfluxDB information
          items:
            type: object
            properties:
              uid:
                type: string
                description: "UID (example: 1)"
              password:
                type: string
                description: "Password (example: mypassword"
              database:
                type: string
                description: "Database name (example: db-1)"
              retention_policy:
                type: string
                description: "Retention policy (example: autogen)"
              id:
                type: number
                description: "ID (example: 1)"
              url:
                type: string
                description: "InfluxDB URL (example: localhost:8086)"
              username:
                type: string
                description: "Username (example: mc-user)"
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    TagDTO:
      title: TagDTO
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        data:
          type: array
          description: List of tag information
          items:
            type: object
            properties:
              measurement:
                type: string
                description: Measurement name
              tags:
                type: array
                description: List of tags
                items:
                  oneOf:
                  - type: object
                  - type: boolean
                  - type: string
                  - type: number
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    api-v1-log-labels-258413105:
      type: object
      properties:
        code:
          type: string
          description: Response code
        data:
          type: object
          properties:
            result:
              type: object
              properties:
                labels:
                  type: array
                  description: List of labels
                  items:
                    oneOf:
                    - type: object
                    - type: boolean
                    - type: string
                    - type: number
        requestId:
          type: string
          description: Request ID
        message:
          type: string
          description: Response message
        status:
          type: string
          description: Response status
        timestamp:
          type: string
          description: Response timestamp
    FieldDTO:
      title: FieldDTO
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        data:
          type: array
          description: List of measurement information
          items:
            type: object
            properties:
              fields:
                type: array
                description: List of field information
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Field type
                    key:
                      type: string
                      description: Field key
              measurement:
                type: string
                description: "Measurement name(example: cpu)"
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    api-v1-log-labels-label-values-2083517687:
      type: object
      properties:
        code:
          type: string
          description: Response code
        data:
          type: object
          properties:
            result:
              type: object
              properties:
                data:
                  type: array
                  description: List of label values
                  items:
                    oneOf:
                    - type: object
                    - type: boolean
                    - type: string
                    - type: number
        requestId:
          type: string
          description: Request ID
        message:
          type: string
          description: Response message
        status:
          type: string
          description: Response status
        timestamp:
          type: string
          description: Response timestamp
    VMDTO:
      title: VMDTO
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        data:
          type: array
          description: Target information list
          items:
            type: object
            properties:
              influx_seq:
                type: number
                description: Influx sequence
              vm_id:
                type: string
                description: TARGET ID
              mci_id:
                type: string
                description: MCI ID
              vm_status:
                type: string
                description: Target status
                enum:
                - RUNNING
                - FAILED
              log_service_status:
                type: string
                description: Log agent service status
                enum:
                - ACTIVE
                - INACTIVE
                - ACTIVATING
                - DEACTIVATING
                - RELOADING
                - NOT_EXIST
                - FAILED
              ns_id:
                type: string
                description: NS ID
              monitoring_service_status:
                type: string
                description: Monitoring agent service status
                enum:
                - ACTIVE
                - INACTIVE
                - ACTIVATING
                - DEACTIVATING
                - RELOADING
                - NOT_EXIST
                - FAILED
              name:
                type: string
                description: Target name
              description:
                type: string
                description: Description
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    ResBody<Void>:
      title: ResBody<Void>
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        data:
          type: object
          description: Response data
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    AlertResponse:
      type: array
      description: List of matching alerts
      items:
        oneOf:
        - type: object
        - type: boolean
        - type: string
        - type: number
    MetricDTO:
      title: MetricDTO
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        data:
          type: array
          description: List of metric information
          items:
            type: object
            properties:
              columns:
                type: array
                description: List of column names
                items:
                  oneOf:
                  - type: object
                  - type: boolean
                  - type: string
                  - type: number
              values:
                type: array
                description: "List of values (2D array, each row corresponds to columns\
                  \ order)"
                items:
                  oneOf:
                  - type: object
                  - type: boolean
                  - type: string
                  - type: number
              name:
                type: string
                description: Measurement name
              tags:
                type: object
                description: Tag information
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    GrafanaHealthCheckResponse:
      title: GrafanaHealthCheckResponse
      type: object
      properties:
        folder:
          type: object
          properties:
            hasData:
              type: boolean
              description: folder is set up correctly
        org:
          type: object
          properties:
            hasData:
              type: boolean
              description: org is set up correctly
        contactPoint:
          type: object
          properties:
            hasData:
              type: boolean
              description: contact point is set up correctly
        datasource:
          type: object
          properties:
            hasData:
              type: boolean
              description: datasource is set up correctly
    TriggerHistoryCommentUpdateRequest:
      title: TriggerHistoryCommentUpdateRequest
      type: object
      properties:
        comment:
          type: string
          description: comment to update
    TriggerVMAddRequest:
      title: TriggerVMAddRequest
      type: object
      properties:
        vmScope:
          type: string
          description: "vm scope (vm, mci)"
        vmId:
          type: string
          description: vm id
        namespaceId:
          type: string
          description: namespace id
    TriggerPolicyNotiChannelUpdateRequest:
      title: TriggerPolicyNotiChannelUpdateRequest
      type: array
      description: List of notification channel update objects
      items:
        type: object
        properties:
          recipients:
            type: array
            description: list of recipients
            items:
              oneOf:
              - type: object
              - type: boolean
              - type: string
              - type: number
          channelName:
            type: string
            description: notification channel name
        description: List of notification channel update objects
    api-o11y-monitoring-NS ID-mciId-vm-vmId1796359160:
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    ResBody<List<PluginDefDTO>>:
      title: ResBody<List<PluginDefDTO>>
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        data:
          type: array
          description: Plugin list
          items:
            type: object
            properties:
              pluginType:
                type: string
                description: Plugin type
              pluginId:
                type: string
                description: Plugin ID
              name:
                type: string
                description: Plugin name
              seq:
                type: number
                description: Plugin sequence
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    AllAlertRulesResponse:
      type: array
      description: List of alert rules
      items:
        oneOf:
        - type: object
        - type: boolean
        - type: string
        - type: number
    MetricRequestDTO:
      title: MetricRequestDTO
      type: object
      properties:
        limit:
          type: number
          description: Result limit count
        group_by:
          type: array
          description: List of group by fields
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        range:
          type: string
          description: Query range
        conditions:
          type: array
          description: List of condition filters
          items:
            type: object
            properties:
              value:
                type: string
                description: Condition value
              key:
                type: string
                description: Condition key
        fields:
          type: array
          description: List of fields to query
          items:
            type: object
            properties:
              field:
                type: string
                description: Field name
              function:
                type: string
                description: "Aggregation function (e.g., mean, max, etc.)"
        group_time:
          type: string
          description: Grouping unit
        measurement:
          type: string
          description: Measurement name
    TriggerVMRemoveRequest:
      title: TriggerVMRemoveRequest
      type: object
      properties:
        vmScope:
          type: string
          description: "vm scope (vm, mci)"
        vmId:
          type: string
          description: vm id
        namespaceId:
          type: string
          description: namespace id
    AllAlertsResponse:
      type: array
      description: List of alerts
      items:
        oneOf:
        - type: object
        - type: boolean
        - type: string
        - type: number
    VMRequestDTO:
      title: VMRequestDTO
      type: object
      properties:
        name:
          type: string
          description: Target name
        description:
          type: string
          description: Description
    TriggerPolicyPageResponse:
      title: TriggerPolicyPageResponse
      type: object
      properties:
        numberOfElements:
          type: number
          description: number of elements
        totalPages:
          type: number
          description: total pages
        pageable:
          type: object
          description: specific page info
        content:
          type: array
          description: trigger policy list
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        totalElements:
          type: number
          description: total elements
    api-v1-log-query_range942726149:
      type: object
      properties:
        code:
          type: string
          description: Response code
        data:
          type: object
          properties:
            result:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                        description: Log value
                      timestamp:
                        type: number
                        description: Timestamp
                      labels:
                        type: object
                        properties:
                          '*':
                            type: string
                            description: Label key-value (dynamic)
                        description: Log labels
                stats:
                  type: object
                  properties:
                    execTime:
                      type: number
                      description: Execution time (ms)
                    totalLinesProcessed:
                      type: number
                      description: Total lines processed
                    totalEntriesReturned:
                      type: number
                      description: Total entries returned
                    totalBytesProcessed:
                      type: number
                      description: Total bytes processed
                status:
                  type: string
                  description: Log status
              description: Log result object
        requestId:
          type: string
          description: Request ID
        message:
          type: string
          description: Response message
        status:
          type: string
          description: Response status
        timestamp:
          type: string
          description: Response timestamp
    MonitoringItemDTO:
      title: MonitoringItemDTO
      type: object
      properties:
        error_message:
          type: string
          description: Error message
        data:
          type: array
          description: Monitoring item list
          items:
            type: object
            properties:
              mciId:
                type: string
                description: MCI ID
              pluginType:
                type: string
                description: Plugin type
              nsId:
                type: string
                description: NSID
              pluginName:
                type: string
                description: Plugin name
              vmId:
                type: string
                description: TARGET ID
              name:
                type: string
                description: Item name
              pluginSeq:
                type: number
                description: Plugin sequence
              state:
                type: string
                description: State
              seq:
                type: number
                description: Item sequence
              pluginConfig:
                type: string
                description: Plugin configuration
        rs_code:
          type: string
          description: "Response code (example: 0000)"
        rs_msg:
          type: string
          description: "Response message (example: Success)"
    AlertTestHistoryPageResponse:
      title: AlertTestHistoryPageResponse
      type: object
      properties:
        numberOfElements:
          type: number
          description: number of elements
        totalPages:
          type: number
          description: total pages
        pageable:
          type: object
          description: specific page info
        content:
          type: array
          description: alert test history list
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        totalElements:
          type: number
          description: total elements
    api-v1-log-log_volumes794457377:
      type: object
      properties:
        code:
          type: string
          description: Response code
        data:
          type: object
          properties:
            result:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      metric:
                        type: object
                        properties:
                          '*':
                            type: string
                            description: "Metric dynamic fields (e.g., app, env)"
                        description: Metric key-value map
                      values:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                              description: Measured value
                            timestamp:
                              type: number
                              description: Timestamp
        requestId:
          type: string
          description: Request ID
        message:
          type: string
          description: Response message
        status:
          type: string
          description: Response status
        timestamp:
          type: string
          description: Response timestamp
    GrafanaManagedReceiverConfig:
      type: array
      description: List of contact points
      items:
        oneOf:
        - type: object
        - type: boolean
        - type: string
        - type: number
